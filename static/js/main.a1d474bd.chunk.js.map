{"version":3,"sources":["components/List.js","App.js","index.js"],"names":["List","useState","newItem","setNewItem","inputSuggestions","setInputSuggestions","items","setItems","suggestions","className","ButtonGroup","color","aria-label","TextField","id","label","variant","value","onChange","e","target","filteredSuggestions","filter","suggestion","includes","toLowerCase","autoComplete","Button","onClick","name","isChecked","length","map","ListItem","button","selectSuggestion","ListItemText","primary","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","item","index","scope","FormControlLabel","control","Switch","checked","tempItems","handleCheck","href","rel","IconButton","Delete","filtered","stateItem","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1d474bd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, ButtonGroup, FormControlLabel, IconButton, ListItem, ListItemText, Paper, Switch, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons'\r\nimport \"./List.css\"\r\n\r\nfunction List() {\r\n\r\n    let [newItem, setNewItem] = useState(\"\")\r\n    let [inputSuggestions, setInputSuggestions] = useState([])\r\n    let [items, setItems] = useState([])\r\n\r\n    const suggestions = [\"atta\", \"rice\", \"salt\", \"sugar\", \"vim\", \"chips\", \"juice\"]\r\n\r\n    const inputChange = (e) => {\r\n        setNewItem(e.target.value)\r\n        if (e.target.value === \"\") {\r\n            setInputSuggestions([])\r\n            return\r\n        }\r\n        let filteredSuggestions = suggestions.filter(suggestion => suggestion.includes(e.target.value.toLowerCase()))\r\n        setInputSuggestions(filteredSuggestions)\r\n    }\r\n\r\n    const selectSuggestion = (e, suggestion) => {\r\n        setNewItem(suggestion)\r\n        setInputSuggestions([])\r\n    }\r\n\r\n    const addItem = () => {\r\n        if (newItem === \"\") return\r\n        const itemObject = {\r\n            name: newItem,\r\n            isChecked: false\r\n        }\r\n        setItems([itemObject, ...items])\r\n        setNewItem(\"\")\r\n        setInputSuggestions([])\r\n    }\r\n\r\n    const deleteItem = (item) => {\r\n        const filtered = items.filter((stateItem) => stateItem !== item)\r\n        setItems(filtered)\r\n    }\r\n\r\n    const handleCheck = (e, item, index) => {\r\n        let tempItems = [...items]\r\n        tempItems[index].isChecked = !item.isChecked\r\n        setItems(tempItems)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"inputContainer\">\r\n                <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\r\n                    <TextField id=\"outlined-basic\" label=\"Add Item\" variant=\"outlined\" value={newItem} onChange={inputChange} autoComplete=\"off\" />\r\n                    <Button variant=\"contained\" onClick={addItem}>ADD</Button>\r\n                </ButtonGroup>\r\n                {inputSuggestions.length > 0 ? (\r\n                    <div className=\"listContainer\">\r\n                        {inputSuggestions.map(suggestion => (\r\n                            <ListItem button onClick={(e) => selectSuggestion(e, suggestion)} className=\"list\">\r\n                                <ListItemText primary={suggestion} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n            <div className=\"container\">\r\n                {items.length > 0 ? (\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Status</TableCell>\r\n                                    <TableCell>Item</TableCell>\r\n                                    <TableCell>Remove</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {items.map((item, index) => (\r\n                                    <TableRow key={item.name}>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                            <FormControlLabel\r\n                                                control={<Switch name={item.name} checked={item.isChecked} onClick={(e) => handleCheck(e, item, index)} />}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <a href={`https://www.amazon.in/s?k=${item.name}`} target=\"_blank\" rel=\"noreferrer\">{item.name}</a>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton color=\"secondary\" aria-label=\"remove\">\r\n                                                <Delete onClick={() => deleteItem(item)} />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                ) : (\r\n                    <h2>Nothing To Order</h2>\r\n                )}\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default List\r\n\r\n\r\n","import List from './components/List';\n\nfunction App() {\n  return (\n    <List />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}